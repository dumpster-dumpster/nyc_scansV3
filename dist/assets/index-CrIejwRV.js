(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))i(l);new MutationObserver(l=>{for(const m of l)if(m.type==="childList")for(const n of m.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function r(l){const m={};return l.integrity&&(m.integrity=l.integrity),l.referrerPolicy&&(m.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?m.credentials="include":l.crossOrigin==="anonymous"?m.credentials="omit":m.credentials="same-origin",m}function i(l){if(l.ep)return;l.ep=!0;const m=r(l);fetch(l.href,m)}})();let z=[{id:0,img_name:"00001",width:1959,height:1090,position:[-3.0089893469241797,-.11086489695181866,-3.7527640949141428],rotation:[[.876134201218856,.06925962026449776,.47706599800804744],[-.04747421839895102,.9972110940209488,-.057586739349882114],[-.4797239414934443,.027805376500959853,.8769787916452908]],fy:1164.6601287484507,fx:1159.5880733038064},{id:1,img_name:"00009",width:1959,height:1090,position:[-2.5199776022057296,-.09704735754873686,-3.6247725540304545],rotation:[[.9982731285632193,-.011928707708098955,-.05751927260507243],[.0065061360949636325,.9955928229282383,-.09355533724430458],[.058381769258182864,.09301955098900708,.9939511719154457]],fy:1164.6601287484507,fx:1159.5880733038064},{id:2,img_name:"00017",width:1959,height:1090,position:[-.7737533667465242,-.3364271945329695,-2.9358969417573753],rotation:[[.9998813418672372,.013742375651625236,-.0069605529394208224],[-.014268370388586709,.996512943252834,-.08220929105659476],[.00580653013657589,.08229885200307129,.9965907801935302]],fy:1164.6601287484507,fx:1159.5880733038064},{id:3,img_name:"00025",width:1959,height:1090,position:[1.2198221749590001,-.2196687861401182,-2.3183162007028453],rotation:[[.9208648867765482,.0012010625395201253,.389880004297208],[-.06298204172269357,.987319521752825,.14571693239364383],[-.3847611242348369,-.1587410451475895,.9092635249821667]],fy:1164.6601287484507,fx:1159.5880733038064},{id:4,img_name:"00033",width:1959,height:1090,position:[1.742387858893817,-.13848225198886954,-2.0566370113193146],rotation:[[.24669889292141334,-.08370189346592856,-.9654706879349405],[.11343747891376445,.9919082664242816,-.05700815184573074],[.9624300466054861,-.09545671285663988,.2541976029815521]],fy:1164.6601287484507,fx:1159.5880733038064},{id:5,img_name:"00041",width:1959,height:1090,position:[3.6567309419223935,-.16470990600750707,-1.3458085590422042],rotation:[[.2341293058324528,-.02968330457755884,-.9717522161434825],[.10270823606832301,.99469554638321,-.005638106875665722],[.9667649592295676,-.09848690996657204,.2359360976431732]],fy:1164.6601287484507,fx:1159.5880733038064},{id:6,img_name:"00049",width:1959,height:1090,position:[3.9013554243203497,-.2597500978038105,-.8106154188297828],rotation:[[.6717235545638952,-.015718162115524837,-.7406351366386528],[.055627354673906296,.9980224478387622,.029270992841185218],[.7387104058127439,-.060861588786650656,.6712695459756353]],fy:1164.6601287484507,fx:1159.5880733038064},{id:7,img_name:"00057",width:1959,height:1090,position:[4.742994605467533,-.05591660945412069,.9500365976084458],rotation:[[-.17042655709210375,.01207080756938,-.9852964448542146],[.1165090336695526,.9931575292530063,-.00798543433078162],[.9784581921120181,-.1161568667478904,-.1706667764862097]],fy:1164.6601287484507,fx:1159.5880733038064},{id:8,img_name:"00065",width:1959,height:1090,position:[4.34676307626522,.08168160516967145,1.0876221470355405],rotation:[[-.003575447631888379,-.044792503246552894,-.9989899137764799],[.10770152645126597,.9931680875192705,-.04491693593046672],[.9941768441149182,-.10775333677534978,.0012732004866391048]],fy:1164.6601287484507,fx:1159.5880733038064},{id:9,img_name:"00073",width:1959,height:1090,position:[3.264984351114202,.078974937336732,1.0117200284114904],rotation:[[-.026919994628162257,-.1565891128261527,-.9872968974090509],[.08444552208239385,.983768234577625,-.1583319754069128],[.9960643893290491,-.0876350978794554,-.013259786205163005]],fy:1164.6601287484507,fx:1159.5880733038064}],q=z[0];function pe(e,t,r,i){return[[2*e/r,0,0,0],[0,-(2*t)/i,0,0],[0,0,200/(200-.2),1],[0,0,-40/(200-.2),0]].flat()}function se(e){const t=e.rotation.flat(),r=e.position;return[[t[0],t[1],t[2],0],[t[3],t[4],t[5],0],[t[6],t[7],t[8],0],[-r[0]*t[0]-r[1]*t[3]-r[2]*t[6],-r[0]*t[1]-r[1]*t[4]-r[2]*t[7],-r[0]*t[2]-r[1]*t[5]-r[2]*t[8],1]].flat()}function me(e,t){return[t[0]*e[0]+t[1]*e[4]+t[2]*e[8]+t[3]*e[12],t[0]*e[1]+t[1]*e[5]+t[2]*e[9]+t[3]*e[13],t[0]*e[2]+t[1]*e[6]+t[2]*e[10]+t[3]*e[14],t[0]*e[3]+t[1]*e[7]+t[2]*e[11]+t[3]*e[15],t[4]*e[0]+t[5]*e[4]+t[6]*e[8]+t[7]*e[12],t[4]*e[1]+t[5]*e[5]+t[6]*e[9]+t[7]*e[13],t[4]*e[2]+t[5]*e[6]+t[6]*e[10]+t[7]*e[14],t[4]*e[3]+t[5]*e[7]+t[6]*e[11]+t[7]*e[15],t[8]*e[0]+t[9]*e[4]+t[10]*e[8]+t[11]*e[12],t[8]*e[1]+t[9]*e[5]+t[10]*e[9]+t[11]*e[13],t[8]*e[2]+t[9]*e[6]+t[10]*e[10]+t[11]*e[14],t[8]*e[3]+t[9]*e[7]+t[10]*e[11]+t[11]*e[15],t[12]*e[0]+t[13]*e[4]+t[14]*e[8]+t[15]*e[12],t[12]*e[1]+t[13]*e[5]+t[14]*e[9]+t[15]*e[13],t[12]*e[2]+t[13]*e[6]+t[14]*e[10]+t[15]*e[14],t[12]*e[3]+t[13]*e[7]+t[14]*e[11]+t[15]*e[15]]}function X(e){let t=e[0]*e[5]-e[1]*e[4],r=e[0]*e[6]-e[2]*e[4],i=e[0]*e[7]-e[3]*e[4],l=e[1]*e[6]-e[2]*e[5],m=e[1]*e[7]-e[3]*e[5],n=e[2]*e[7]-e[3]*e[6],a=e[8]*e[13]-e[9]*e[12],f=e[8]*e[14]-e[10]*e[12],C=e[8]*e[15]-e[11]*e[12],_=e[9]*e[14]-e[10]*e[13],D=e[9]*e[15]-e[11]*e[13],M=e[10]*e[15]-e[11]*e[14],u=t*M-r*D+i*_+l*C-m*f+n*a;return u?[(e[5]*M-e[6]*D+e[7]*_)/u,(e[2]*D-e[1]*M-e[3]*_)/u,(e[13]*n-e[14]*m+e[15]*l)/u,(e[10]*m-e[9]*n-e[11]*l)/u,(e[6]*C-e[4]*M-e[7]*f)/u,(e[0]*M-e[2]*C+e[3]*f)/u,(e[14]*i-e[12]*n-e[15]*r)/u,(e[8]*n-e[10]*i+e[11]*r)/u,(e[4]*D-e[5]*C+e[7]*a)/u,(e[1]*C-e[0]*D-e[3]*a)/u,(e[12]*m-e[13]*i+e[15]*t)/u,(e[9]*i-e[8]*m-e[11]*t)/u,(e[5]*f-e[4]*_-e[6]*a)/u,(e[0]*_-e[1]*f+e[2]*a)/u,(e[13]*r-e[12]*l-e[14]*t)/u,(e[8]*l-e[9]*r+e[10]*t)/u]:null}function R(e,t,r,i,l){let m=Math.hypot(r,i,l);r/=m,i/=m,l/=m;let n=Math.sin(t),a=Math.cos(t),f=1-a,C=r*r*f+a,_=i*r*f+l*n,D=l*r*f-i*n,M=r*i*f-l*n,u=i*i*f+a,ee=l*i*f+r*n,G=r*l*f+i*n,W=i*l*f-r*n,K=l*l*f+a;return[e[0]*C+e[4]*_+e[8]*D,e[1]*C+e[5]*_+e[9]*D,e[2]*C+e[6]*_+e[10]*D,e[3]*C+e[7]*_+e[11]*D,e[0]*M+e[4]*u+e[8]*ee,e[1]*M+e[5]*u+e[9]*ee,e[2]*M+e[6]*u+e[10]*ee,e[3]*M+e[7]*u+e[11]*ee,e[0]*G+e[4]*W+e[8]*K,e[1]*G+e[5]*W+e[9]*K,e[2]*G+e[6]*W+e[10]*K,e[3]*G+e[7]*W+e[11]*K,...e.slice(12,16)]}function A(e,t,r,i){return[...e.slice(0,12),e[0]*t+e[4]*r+e[8]*i+e[12],e[1]*t+e[5]*r+e[9]*i+e[13],e[2]*t+e[6]*r+e[10]*i+e[14],e[3]*t+e[7]*r+e[11]*i+e[15]]}function Me(e){let t,r=0,i;const l=3*4+3*4+4+4;let m=[],n=new Uint32Array,a=0;var f=new Float32Array(1),C=new Int32Array(f.buffer);function _(c){f[0]=c;var h=C[0],P=h>>31&1,Y=h>>23&255,b=h&8388607,E;return Y==0?E=0:Y<113?(E=0,b|=8388608,b=b>>113-Y,b&16777216&&(E=1,b=0)):Y<142?E=Y-112:(E=31,b=0),P<<15|E<<10|b>>13}function D(c,h){return(_(c)|_(h)<<16)>>>0}function M(c,h){console.log("üîÑ Worker attempting to send message with keys:",Object.keys(h));for(const P in h)if(h[P]instanceof ArrayBuffer&&h[P].byteLength%4!==0){console.error("‚ùå Not sending misaligned buffer property:",P,h[P].byteLength);return}console.log("‚úÖ Worker sending message successfully"),c.postMessage(h)}function u(){if(!t)return;const c=new Float32Array(t),h=new Uint8Array(t);var P=1024*2,Y=Math.ceil(2*r/P),b=new Uint32Array(P*Y*4),E=new Uint8Array(b.buffer),J=new Float32Array(b.buffer);for(let v=0;v<r;v++){J[8*v+0]=c[8*v+0],J[8*v+1]=c[8*v+1],J[8*v+2]=c[8*v+2],E[4*(8*v+7)+0]=h[32*v+24+0],E[4*(8*v+7)+1]=h[32*v+24+1],E[4*(8*v+7)+2]=h[32*v+24+2],E[4*(8*v+7)+3]=h[32*v+24+3];let p=[c[8*v+3+0],c[8*v+3+1],c[8*v+3+2]],d=[(h[32*v+28+0]-128)/128,(h[32*v+28+1]-128)/128,(h[32*v+28+2]-128)/128,(h[32*v+28+3]-128)/128];const g=[1-2*(d[2]*d[2]+d[3]*d[3]),2*(d[1]*d[2]+d[0]*d[3]),2*(d[1]*d[3]-d[0]*d[2]),2*(d[1]*d[2]-d[0]*d[3]),1-2*(d[1]*d[1]+d[3]*d[3]),2*(d[2]*d[3]+d[0]*d[1]),2*(d[1]*d[3]+d[0]*d[2]),2*(d[2]*d[3]-d[0]*d[1]),1-2*(d[1]*d[1]+d[2]*d[2])].map((w,oe)=>w*p[Math.floor(oe/3)]),O=[g[0]*g[0]+g[3]*g[3]+g[6]*g[6],g[0]*g[1]+g[3]*g[4]+g[6]*g[7],g[0]*g[2]+g[3]*g[5]+g[6]*g[8],g[1]*g[1]+g[4]*g[4]+g[7]*g[7],g[1]*g[2]+g[4]*g[5]+g[7]*g[8],g[2]*g[2]+g[5]*g[5]+g[8]*g[8]];b[8*v+4]=D(4*O[0],4*O[1]),b[8*v+5]=D(4*O[2],4*O[3]),b[8*v+6]=D(4*O[4],4*O[5])}e.postMessage({texdata:b,texwidth:P,texheight:Y},[b.buffer])}function ee(c){if(!t)return;const h=new Float32Array(t);if(a==r){let p=m[2]*c[2]+m[6]*c[6]+m[10]*c[10];if(Math.abs(p-1)<.01)return}else u(),a=r;console.time("sort");let P=-1/0,Y=1/0,b=new Int32Array(r);for(let p=0;p<r;p++){let d=(c[2]*h[8*p+0]+c[6]*h[8*p+1]+c[10]*h[8*p+2])*4096|0;b[p]=d,d>P&&(P=d),d<Y&&(Y=d)}let E=(256*256-1)/(P-Y),J=new Uint32Array(256*256);for(let p=0;p<r;p++)b[p]=(b[p]-Y)*E|0,J[b[p]]++;let v=new Uint32Array(256*256);for(let p=1;p<256*256;p++)v[p]=v[p-1]+J[p-1];n=new Uint32Array(r);for(let p=0;p<r;p++)n[v[b[p]]++]=p;console.timeEnd("sort"),m=c,e.postMessage({depthIndex:n,viewProj:c,vertexCount:r},[n.buffer])}function G(c){const h=new Uint8Array(c),P=new TextDecoder().decode(h.slice(0,1024*10)),Y=`end_header
`,b=P.indexOf(Y);if(b<0)throw new Error("Unable to read .ply file header");const E=parseInt(/element vertex (\d+)\n/.exec(P)[1]);console.log("üî¢ Original vertex count:",E);let J=0,v={},p={};const d={double:"getFloat64",int:"getInt32",uint:"getUint32",float:"getFloat32",short:"getInt16",ushort:"getUint16",uchar:"getUint8"};for(let x of P.slice(0,b).split(`
`).filter(B=>B.startsWith("property "))){const[B,N,V]=x.split(" "),j=d[N]||"getInt8";p[V]=j,v[V]=J,J+=parseInt(j.replace(/[^\d]/g,""))/8}console.log("üìä Bytes per row:",J,"properties:",Object.keys(p));let g=new DataView(c,b+Y.length),O=0;const w=new Proxy({},{get(x,B){if(!p[B])throw new Error(B+" not found");return g[p[B]](O*J+v[B],!0)}});console.time("calculate importance");let oe=new Float32Array(E),L=new Uint32Array(E),U={minX:1/0,maxX:-1/0,minY:1/0,maxY:-1/0,minZ:1/0,maxZ:-1/0};for(O=0;O<E;O++){const x=w.x,B=w.y,N=w.z;if(U.minX=Math.min(U.minX,x),U.maxX=Math.max(U.maxX,x),U.minY=Math.min(U.minY,B),U.maxY=Math.max(U.maxY,B),U.minZ=Math.min(U.minZ,N),U.maxZ=Math.max(U.maxZ,N),p.scale_0){const V=Math.exp(w.scale_0)*Math.exp(w.scale_1)*Math.exp(w.scale_2),j=1/(1+Math.exp(-w.opacity));oe[O]=V*j}else oe[O]=1;L[O]=O}if(console.timeEnd("calculate importance"),console.log("üìä Processing results:"),console.log("- Vertex count:",E),console.log("- Data bounds:",U),E===0)return console.warn("‚ö†Ô∏è No vertices found!"),new ArrayBuffer(0);console.time("sort vertices");const F=new Uint32Array(E);for(let x=0;x<E;x++)F[x]=x;F.sort((x,B)=>oe[B]-oe[x]),console.timeEnd("sort vertices");const k=3*4+3*4+4+4,$=new ArrayBuffer(k*E);console.time("build buffer");for(let x=0;x<E;x++){const B=F[x];O=L[B];const N=new Float32Array($,x*k,3),V=new Float32Array($,x*k+4*3,3),j=new Uint8ClampedArray($,x*k+4*3+4*3,4),te=new Uint8ClampedArray($,x*k+4*3+4*3+4,4);if(p.scale_0){const ne=Math.sqrt(w.rot_0**2+w.rot_1**2+w.rot_2**2+w.rot_3**2);te[0]=w.rot_0/ne*128+128,te[1]=w.rot_1/ne*128+128,te[2]=w.rot_2/ne*128+128,te[3]=w.rot_3/ne*128+128,V[0]=Math.exp(w.scale_0),V[1]=Math.exp(w.scale_1),V[2]=Math.exp(w.scale_2)}else V[0]=.01,V[1]=.01,V[2]=.01,te[0]=255,te[1]=0,te[2]=0,te[3]=0;if(N[0]=w.x,N[1]=w.y,N[2]=w.z,p.f_dc_0){const ne=.28209479177387814;j[0]=(.5+ne*w.f_dc_0)*255,j[1]=(.5+ne*w.f_dc_1)*255,j[2]=(.5+ne*w.f_dc_2)*255}else j[0]=w.red,j[1]=w.green,j[2]=w.blue;p.opacity?j[3]=1/(1+Math.exp(-w.opacity))*255:j[3]=255,x<3&&console.log(`üìç Vertex ${x}: pos=[${N[0].toFixed(2)}, ${N[1].toFixed(2)}, ${N[2].toFixed(2)}], scale=[${V[0].toFixed(3)}, ${V[1].toFixed(3)}, ${V[2].toFixed(3)}]`)}return console.timeEnd("build buffer"),console.log("‚úÖ PLY processing complete:"),console.log("- Final vertex count:",E),console.log("- Buffer size:",$.byteLength,"bytes"),$}const W=()=>{if(!K){K=!0;let c=i;ee(c),setTimeout(()=>{K=!1,c!==i&&W()},0)}};let K;e.onmessage=c=>{if(c.data.ply)console.log("üîÑ Worker processing PLY request"),console.log("- PLY buffer size:",c.data.ply.byteLength,"bytes"),console.log("- Save flag:",!!c.data.save),r=0,i&&ee(i),t=G(c.data.ply),r=Math.floor(t.byteLength/l),console.log("üì§ Sending processed buffer back to main thread:"),console.log("- Final buffer size:",t.byteLength,"bytes"),console.log("- Final vertex count:",r),M(e,{buffer:t,vertexCount:r,save:!!c.data.save});else if(c.data.buffer){if(c.data.buffer.byteLength%4!==0){console.error("‚ùå Worker received misaligned buffer:",c.data.buffer.byteLength),e.postMessage({debug:"onmessage: received buffer not multiple of 4: "+c.data.buffer.byteLength});return}console.log("üì• Worker received splat buffer:",c.data.buffer.byteLength,"bytes, vertex count:",c.data.vertexCount),t=c.data.buffer,r=c.data.vertexCount}else c.data.vertexCount?(console.log("üì• Worker received vertex count update:",c.data.vertexCount),r=c.data.vertexCount):c.data.view&&(i=c.data.view,W())}}function ve(e,t){return e?e.querySelector(t):null}const Se=`
#version 300 es
precision highp float;
precision highp int;

uniform highp usampler2D u_texture;
uniform mat4 projection, view;
uniform vec2 focal;
uniform vec2 viewport;

in vec2 position;
in int index;

out vec4 vColor;
out vec2 vPosition;

void main () {
    uvec4 cen = texelFetch(u_texture, ivec2((uint(index) & 0x3ffu) << 1, uint(index) >> 10), 0);
    vec4 cam = view * vec4(uintBitsToFloat(cen.xyz), 1);
    vec4 pos2d = projection * cam;

    float clip = 1.2 * pos2d.w;
    if (pos2d.z < -clip || pos2d.x < -clip || pos2d.x > clip || pos2d.y < -clip || pos2d.y > clip) {
        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
        return;
    }

    uvec4 cov = texelFetch(u_texture, ivec2(((uint(index) & 0x3ffu) << 1) | 1u, uint(index) >> 10), 0);
    vec2 u1 = unpackHalf2x16(cov.x), u2 = unpackHalf2x16(cov.y), u3 = unpackHalf2x16(cov.z);
    mat3 Vrk = mat3(u1.x, u1.y, u2.x, u1.y, u2.y, u3.x, u2.x, u3.x, u3.y);

    mat3 J = mat3(
        focal.x / cam.z, 0., -(focal.x * cam.x) / (cam.z * cam.z),
        0., -focal.y / cam.z, (focal.y * cam.y) / (cam.z * cam.z),
        0., 0., 0.
    );

    mat3 T = transpose(mat3(view)) * J;
    mat3 cov2d = transpose(T) * Vrk * T;

    float mid = (cov2d[0][0] + cov2d[1][1]) / 2.0;
    float radius = length(vec2((cov2d[0][0] - cov2d[1][1]) / 2.0, cov2d[0][1]));
    float lambda1 = mid + radius, lambda2 = mid - radius;

    if(lambda2 < 0.0) return;
    vec2 diagonalVector = normalize(vec2(cov2d[0][1], lambda1 - cov2d[0][0]));
    vec2 majorAxis = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;
    vec2 minorAxis = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);

    vColor = clamp(pos2d.z/pos2d.w+1.0, 0.0, 1.0) * vec4((cov.w) & 0xffu, (cov.w >> 8) & 0xffu, (cov.w >> 16) & 0xffu, (cov.w >> 24) & 0xffu) / 255.0;
    vPosition = position;

    vec2 vCenter = vec2(pos2d) / pos2d.w;
    gl_Position = vec4(
        vCenter
        + position.x * majorAxis / viewport
        + position.y * minorAxis / viewport, 0.0, 1.0);
}
`.trim(),Ce=`
    #version 300 es
    precision highp float;

    in vec4 vColor;
    in vec2 vPosition;

    out vec4 fragColor;

    void main () {
        float A = -dot(vPosition, vPosition);
        if (A < -4.0) discard;
        float B = exp(A) * vColor.a;
        fragColor = vec4(B * vColor.rgb, B);
    }

    `.trim();let xe=[.47,.04,.88,0,-.11,.99,.02,0,-.88,-.11,.47,0,.07,.03,6.55,1],S=xe;async function be(e,t){console.log("üöÄ MAIN THREAD: Initializing splat viewer"),console.log("- Container ID:",e),console.log("- Splat file:",t);const r=document.getElementById(e);if(!r)throw new Error(`Container with id '${e}' not found`);const i=document.createElement("canvas");i.id="viewer-canvas",i.style.cssText="width: 100%; height: 100%; display: block; position: absolute; top: 0; left: 0;";const l=r.querySelector("#viewer-controls, #crop-controls");r.innerHTML="",r.appendChild(i),l&&r.appendChild(l),r.insertAdjacentHTML("beforeend",`
        <div class="scene" id="spinner" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1002;">
            <div class="cube-wrapper">
                <div class="cube">
                    <div class="cube-faces">
                        <div class="cube-face bottom"></div>
                        <div class="cube-face top"></div>
                        <div class="cube-face left"></div>
                        <div class="cube-face right"></div>
                        <div class="cube-face back"></div>
                        <div class="cube-face front"></div>
                    </div>
                </div>
            </div>
        </div>
    `),await new Promise(o=>requestAnimationFrame(o));const n=i.getContext("webgl2");if(!n)throw new Error("WebGL2 not supported");let a=!0,f=0;ve(r,"#spinner"),ve(r,"#message");try{S=JSON.parse(decodeURIComponent(location.hash.slice(1))),a=!1}catch{}console.log("üåê Fetching splat file from:",t);const C=await fetch(t,{mode:"cors",headers:{"Cache-Control":"no-cache"},credentials:"omit"});if(C.status!=200)throw new Error(C.status+" Unable to load "+C.url);const _=3*4+3*4+4+4,D=C.body.getReader(),M=C.headers.get("content-length");console.log("üìä File info from headers:"),console.log("- Content-Length header:",M,"bytes"),console.log("- Expected size:",M?(parseInt(M)/1024/1024).toFixed(2)+" MB":"unknown");let u;M?(u=new Uint8Array(parseInt(M)),console.log("üì¶ Allocated buffer size:",u.length,"bytes")):(console.log("‚ö†Ô∏è No content-length header, using dynamic allocation"),u=new Uint8Array(0));const ee=u.length/_>5e5?1:1/devicePixelRatio,G=new Worker(URL.createObjectURL(new Blob(["(",Me.toString(),")(self)"],{type:"application/javascript"})));let W;const K=n.createShader(n.VERTEX_SHADER);n.shaderSource(K,Se),n.compileShader(K),n.getShaderParameter(K,n.COMPILE_STATUS)||console.error(n.getShaderInfoLog(K));const c=n.createShader(n.FRAGMENT_SHADER);n.shaderSource(c,Ce),n.compileShader(c),n.getShaderParameter(c,n.COMPILE_STATUS)||console.error(n.getShaderInfoLog(c));const h=n.createProgram();n.attachShader(h,K),n.attachShader(h,c),n.linkProgram(h),n.useProgram(h),n.getProgramParameter(h,n.LINK_STATUS)||console.error(n.getProgramInfoLog(h)),n.disable(n.DEPTH_TEST),n.enable(n.BLEND),n.blendFuncSeparate(n.ONE_MINUS_DST_ALPHA,n.ONE,n.ONE_MINUS_DST_ALPHA,n.ONE),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD);const P=n.getUniformLocation(h,"projection"),Y=n.getUniformLocation(h,"viewport"),b=n.getUniformLocation(h,"focal"),E=n.getUniformLocation(h,"view"),J=new Float32Array([-2,-2,2,-2,2,2,-2,2]),v=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,v),n.bufferData(n.ARRAY_BUFFER,J,n.STATIC_DRAW);const p=n.getAttribLocation(h,"position");n.enableVertexAttribArray(p),n.bindBuffer(n.ARRAY_BUFFER,v),n.vertexAttribPointer(p,2,n.FLOAT,!1,0,0);var d=n.createTexture();n.bindTexture(n.TEXTURE_2D,d);var g=n.getUniformLocation(h,"u_texture");n.uniform1i(g,0);const O=n.createBuffer(),w=n.getAttribLocation(h,"index");n.enableVertexAttribArray(w),n.bindBuffer(n.ARRAY_BUFFER,O),n.vertexAttribIPointer(w,1,n.INT,!1,0,0),n.vertexAttribDivisor(w,1);const oe=()=>{n.uniform2fv(b,new Float32Array([q.fx,q.fy])),W=pe(q.fx,q.fy,innerWidth,innerHeight),n.uniform2fv(Y,new Float32Array([innerWidth,innerHeight])),n.canvas.width=Math.round(innerWidth/ee),n.canvas.height=Math.round(innerHeight/ee),n.viewport(0,0,n.canvas.width,n.canvas.height),n.uniformMatrix4fv(P,!1,W)};window.addEventListener("resize",oe),oe(),G.onmessage=o=>{if(console.log("üì® Main thread received worker message with keys:",Object.keys(o.data)),o.data.buffer){if(o.data.buffer.byteLength%4!==0){console.error("‚ùå Main thread received misaligned buffer:",o.data.buffer.byteLength);return}if(console.log("‚úÖ Main thread updating buffer:",o.data.buffer.byteLength,"bytes, vertices:",o.data.vertexCount),o.data.buffer,f=o.data.vertexCount||Math.floor(o.data.buffer.byteLength/_),f>0&&(S=[1,0,0,0,0,.866,-.5,0,0,.5,.866,0,0,2,8,1],a=!1),W&&S){const s=me(W,S);G.postMessage({view:s})}}else if(o.data.texdata){const{texdata:s,texwidth:I,texheight:T}=o.data;console.log("üìä Received texture data:",I,"x",T,"size:",s.byteLength),n.bindTexture(n.TEXTURE_2D,d),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texImage2D(n.TEXTURE_2D,0,n.RGBA32UI,I,T,0,n.RGBA_INTEGER,n.UNSIGNED_INT,s),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,d)}else if(o.data.depthIndex){const{depthIndex:s,viewProj:I}=o.data;n.bindBuffer(n.ARRAY_BUFFER,O),n.bufferData(n.ARRAY_BUFFER,s,n.DYNAMIC_DRAW),o.data.vertexCount&&(f=o.data.vertexCount)}else o.data.debug};let L=[],U=0;window.addEventListener("keydown",o=>{a=!1,L.includes(o.code)||L.push(o.code),/\d/.test(o.key)&&(U=parseInt(o.key),q=z[U],S=se(q)),["-","_"].includes(o.key)&&(U=(U+z.length-1)%z.length,S=se(z[U])),["+","="].includes(o.key)&&(U=(U+1)%z.length,S=se(z[U])),o.code=="KeyV"?location.hash="#"+JSON.stringify(S.map(s=>Math.round(s*100)/100)):o.code==="KeyP"&&(a=!0)}),window.addEventListener("keyup",o=>{L=L.filter(s=>s!==o.code)}),window.addEventListener("blur",()=>{L=[]}),window.addEventListener("wheel",o=>{a=!1,o.preventDefault();const I=o.deltaMode==1?10:o.deltaMode==2?innerHeight:1;let T=X(S);if(o.shiftKey)T=A(T,o.deltaX*I/innerWidth,o.deltaY*I/innerHeight,0);else if(o.ctrlKey||o.metaKey)T=A(T,0,0,-10*(o.deltaY*I)/innerHeight);else{let Z=4;T=A(T,0,0,Z),T=R(T,-(o.deltaX*I)/innerWidth,0,1,0),T=R(T,o.deltaY*I/innerHeight,1,0,0),T=A(T,0,0,-Z)}S=X(T)},{passive:!1});let F,k,$;i.addEventListener("mousedown",o=>{a=!1,o.preventDefault(),F=o.clientX,k=o.clientY,$=o.ctrlKey||o.metaKey?2:1}),i.addEventListener("contextmenu",o=>{a=!1,o.preventDefault(),F=o.clientX,k=o.clientY,$=2}),i.addEventListener("mousemove",o=>{if(o.preventDefault(),$==1){let s=X(S),I=5*(o.clientX-F)/innerWidth,T=5*(o.clientY-k)/innerHeight,Z=4;s=A(s,0,0,Z),s=R(s,I,0,1,0),s=R(s,-T,1,0,0),s=A(s,0,0,-Z),S=X(s),F=o.clientX,k=o.clientY}else if($==2){let s=X(S);s=A(s,-10*(o.clientX-F)/innerWidth,0,10*(o.clientY-k)/innerHeight),S=X(s),F=o.clientX,k=o.clientY}}),i.addEventListener("mouseup",o=>{o.preventDefault(),$=!1,F=0,k=0});let x=0,B=0;i.addEventListener("touchstart",o=>{o.preventDefault(),o.touches.length===1?(a=!1,F=o.touches[0].clientX,k=o.touches[0].clientY,$=1):o.touches.length===2&&(a=!1,F=o.touches[0].clientX,x=o.touches[1].clientX,k=o.touches[0].clientY,B=o.touches[1].clientY,$=1)},{passive:!1}),i.addEventListener("touchmove",o=>{if(o.preventDefault(),o.touches.length===1&&$){let s=X(S),I=4*(o.touches[0].clientX-F)/innerWidth,T=4*(o.touches[0].clientY-k)/innerHeight,Z=4;s=A(s,0,0,Z),s=R(s,I,0,1,0),s=R(s,-T,1,0,0),s=A(s,0,0,-Z),S=X(s),F=o.touches[0].clientX,k=o.touches[0].clientY}else if(o.touches.length===2){const s=Math.atan2(k-B,F-x)-Math.atan2(o.touches[0].clientY-o.touches[1].clientY,o.touches[0].clientX-o.touches[1].clientX),I=Math.hypot(F-x,k-B)/Math.hypot(o.touches[0].clientX-o.touches[1].clientX,o.touches[0].clientY-o.touches[1].clientY),T=(o.touches[0].clientX+o.touches[1].clientX-(F+x))/2,Z=(o.touches[0].clientY+o.touches[1].clientY-(k+B))/2;let Q=X(S);Q=R(Q,s,0,0,1),Q=A(Q,-T/innerWidth,-Z/innerHeight,0),Q=A(Q,0,0,3*(1-I)),S=X(Q),F=o.touches[0].clientX,x=o.touches[1].clientX,k=o.touches[0].clientY,B=o.touches[1].clientY}},{passive:!1}),i.addEventListener("touchend",o=>{o.preventDefault(),$=!1,F=0,k=0},{passive:!1});let N=0,V=0;window.addEventListener("gamepadconnected",o=>{const s=navigator.getGamepads()[o.gamepad.index];console.log(`Gamepad connected at index ${s.index}: ${s.id}. It has ${s.buttons.length} buttons and ${s.axes.length} axes.`)}),window.addEventListener("gamepaddisconnected",o=>{console.log("Gamepad disconnected")});let j,te;const ne=o=>{let s=X(S),I=L.includes("Shift")||L.includes("ShiftLeft")||L.includes("ShiftRight");L.includes("ArrowUp")&&(I?s=A(s,0,-.03,0):s=A(s,0,0,.1)),L.includes("ArrowDown")&&(I?s=A(s,0,.03,0):s=A(s,0,0,-.1)),L.includes("ArrowLeft")&&(s=A(s,-.03,0,0)),L.includes("ArrowRight")&&(s=A(s,.03,0,0)),L.includes("KeyA")&&(s=R(s,-.01,0,1,0)),L.includes("KeyD")&&(s=R(s,.01,0,1,0)),L.includes("KeyQ")&&(s=R(s,.01,0,0,1)),L.includes("KeyE")&&(s=R(s,-.01,0,0,1)),L.includes("KeyW")&&(s=R(s,.005,1,0,0)),L.includes("KeyS")&&(s=R(s,-.005,1,0,0));const T=navigator.getGamepads?navigator.getGamepads():[];let Z=L.includes("Space");for(let y of T){if(!y)continue;const re=.1,ae=.06,de=.02;Math.abs(y.axes[0])>re&&(s=A(s,ae*y.axes[0],0,0),a=!1),Math.abs(y.axes[1])>re&&(s=A(s,0,0,-ae*y.axes[1]),a=!1),(y.buttons[12].pressed||y.buttons[13].pressed)&&(s=A(s,0,-ae*(y.buttons[12].pressed-y.buttons[13].pressed),0),a=!1),(y.buttons[14].pressed||y.buttons[15].pressed)&&(s=A(s,-ae*(y.buttons[14].pressed-y.buttons[15].pressed),0,0),a=!1),Math.abs(y.axes[2])>re&&(s=R(s,de*y.axes[2],0,1,0),a=!1),Math.abs(y.axes[3])>re&&(s=R(s,-de*y.axes[3],1,0,0),a=!1);let ge=y.buttons[6].value-y.buttons[7].value;Math.abs(ge)>re&&(s=R(s,de*ge,0,0,1),a=!1),y.buttons[4].pressed&&!j&&(q=z[(z.indexOf(q)+1)%z.length],s=X(se(q)),a=!1),y.buttons[5].pressed&&!te&&(q=z[(z.indexOf(q)+z.length-1)%z.length],s=X(se(q)),a=!1),j=y.buttons[4].pressed,te=y.buttons[5].pressed,y.buttons[0].pressed&&(Z=!0,a=!1),y.buttons[3].pressed&&(a=!0)}if(["KeyJ","KeyK","KeyL","KeyI"].some(y=>L.includes(y))){let y=4;s=A(s,0,0,y),s=R(s,L.includes("KeyJ")?-.05:L.includes("KeyL")?.05:0,0,1,0),s=R(s,L.includes("KeyI")?.05:L.includes("KeyK")?-.05:0,1,0,0),s=A(s,0,0,-y)}if(S=X(s),a){let y=X(xe);const re=Math.sin((Date.now()-V)/5e3);y=A(y,2.5*re,0,6*(1-Math.cos(re))),y=R(y,-.6*re,0,1,0),S=X(y)}Z?N=Math.min(1,N+.05):N=Math.max(0,N-.05);let Q=X(S);Q=A(Q,0,-N,0),Q=R(Q,-.1*N,1,0,0);let he=X(Q);const Ae=me(W,he);G.postMessage({view:Ae}),f>0?(document.getElementById("spinner").style.display="none",n.uniformMatrix4fv(E,!1,he),n.clear(n.COLOR_BUFFER_BIT),n.drawArraysInstanced(n.TRIANGLE_FAN,0,4,f)):(n.clear(n.COLOR_BUFFER_BIT),document.getElementById("spinner").style.display="",V=Date.now()+2e3),100*f/(u.length/_),requestAnimationFrame(ne)};ne();const fe=o=>o[0]==112&&o[1]==108&&o[2]==121&&o[3]==10,_e=o=>{const s=new FileReader;/\.json$/i.test(o.name)?(s.onload=()=>{z=JSON.parse(s.result),S=se(z[0]),W=pe(q.fx/ee,q.fy/ee,i.width,i.height),n.uniformMatrix4fv(P,!1,W),console.log("Loaded Cameras")},s.readAsText(o)):(ce=!0,s.onload=()=>{u=new Uint8Array(s.result),console.log("Loaded",Math.floor(u.length/_)),fe(u)?G.postMessage({ply:u.buffer,save:!0}):G.postMessage({buffer:u.buffer,vertexCount:Math.floor(u.length/_)})},s.readAsArrayBuffer(o))};window.addEventListener("hashchange",o=>{try{S=JSON.parse(decodeURIComponent(location.hash.slice(1))),a=!1}catch{}});const le=o=>{o.preventDefault(),o.stopPropagation()};document.addEventListener("dragenter",le),document.addEventListener("dragover",le),document.addEventListener("dragleave",le),document.addEventListener("drop",o=>{o.preventDefault(),o.stopPropagation(),_e(o.dataTransfer.files[0])});let ie=0,ue=-1,ce=!1;for(;;){const{done:o,value:s}=await D.read();if(o||ce)break;u.set(s,ie),ie+=s.length,f>ue&&(fe(u)||G.postMessage({buffer:u.buffer,vertexCount:Math.floor(ie/_)}),ue=f)}if(!ce)G.postMessage({ply:u.buffer.slice(0,ie),save:!1});else{const s=Math.floor(ie/_)*_,I=Math.floor(s/4)*4,T=Math.floor(I/_);I>0&&G.postMessage({buffer:u.buffer.slice(0,I),vertexCount:T})}}class Ue{constructor(){this.progressBar=null,this.loadingOverlay=null,this.currentProgress=0,this.isLoading=!1,this.loadingTasks=new Map,this.totalTasks=0,this.completedTasks=0}init(){this.createProgressBar(),this.createLoadingOverlay()}createProgressBar(){document.getElementById("progress")?this.progressBar=document.getElementById("progress"):(this.progressBar=document.createElement("div"),this.progressBar.id="progress",this.progressBar.style.width="0%",document.body.appendChild(this.progressBar))}createLoadingOverlay(){document.querySelector(".loading-overlay")?this.loadingOverlay=document.querySelector(".loading-overlay"):(this.loadingOverlay=document.createElement("div"),this.loadingOverlay.className="loading-overlay hidden",this.loadingOverlay.innerHTML=`
                <div class="loading-spinner"></div>
                <div class="loading-text">Loading NYC Scans</div>
                <div class="loading-progress">Initializing...</div>
            `,document.body.appendChild(this.loadingOverlay))}startLoading(t="Loading..."){if(this.isLoading=!0,this.currentProgress=0,this.totalTasks=0,this.completedTasks=0,this.loadingTasks.clear(),this.progressBar&&(this.progressBar.style.width="0%",this.progressBar.classList.remove("hidden")),this.loadingOverlay){const r=this.loadingOverlay.querySelector(".loading-text"),i=this.loadingOverlay.querySelector(".loading-progress");r&&(r.textContent=t),i&&(i.textContent="Initializing..."),this.loadingOverlay.classList.remove("hidden")}}updateProgress(t,r=null){if(this.currentProgress=Math.max(0,Math.min(100,t)),this.progressBar&&(this.progressBar.style.width=`${this.currentProgress}%`),this.loadingOverlay&&r){const i=this.loadingOverlay.querySelector(".loading-progress");i&&(i.textContent=`${r} (${Math.round(this.currentProgress)}%)`)}}addTask(t,r=""){this.loadingTasks.set(t,{completed:!1,description:r}),this.totalTasks++,this.updateTaskProgress()}completeTask(t,r=null){this.loadingTasks.has(t)&&!this.loadingTasks.get(t).completed&&(this.loadingTasks.get(t).completed=!0,this.completedTasks++,this.updateTaskProgress(r))}updateTaskProgress(t=null){if(this.totalTasks>0){const r=this.completedTasks/this.totalTasks*100;this.updateProgress(r,t)}}finishLoading(t=500){this.updateProgress(100,"Complete!"),setTimeout(()=>{this.isLoading=!1,this.progressBar&&this.progressBar.classList.add("hidden"),this.loadingOverlay&&this.loadingOverlay.classList.add("hidden")},t)}setMessage(t){if(this.loadingOverlay){const r=this.loadingOverlay.querySelector(".loading-progress");if(r){const i=Math.round(this.currentProgress);r.textContent=`${t} ${i>0?`(${i}%)`:""}`}}}hideLoading(){this.isLoading=!1,this.progressBar&&this.progressBar.classList.add("hidden"),this.loadingOverlay&&this.loadingOverlay.classList.add("hidden")}showProgressOnly(){this.loadingOverlay&&this.loadingOverlay.classList.add("hidden"),this.progressBar&&this.progressBar.classList.remove("hidden")}}const H=new Ue;document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{H.init()}):H.init();async function ye(e){if(!document.getElementById("app-container")){const r=document.getElementById("progress"),i=document.querySelector(".loading-overlay");document.body.innerHTML="",r&&document.body.appendChild(r),i&&document.body.appendChild(i);const l=`
      <div id="app-container">
        <div id="viewer-container">
          <div id="viewer-controls">
            <!-- Controls can be added here if needed -->
          </div>
        </div>
        <div id="header-container">
          <h1 id="header-title">Loading...</h1>
          <p id="header-subtitle">Please wait while content loads</p>
        </div>
        <div id="gallery-container">
          <!-- Gallery thumbnails will be rendered here -->
        </div>
      </div>
    `;document.body.innerHTML=l,await ke()}await new Promise(r=>requestAnimationFrame(r));const t=document.getElementById("viewer-container");if(!t)throw new Error("Failed to create viewer container");try{const r=await Le(e);await Ee(e),await be("viewer-container",r)}catch(r){console.error("Failed to initialize splat viewer:",r),t.innerHTML=`
      <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: white; background: #333; font-family: Arial, sans-serif;">
        <div style="text-align: center;">
          <h2>Failed to load 3D viewer</h2>
          <p>Error: ${r.message}</p>
          <p>Click a thumbnail below to try loading another scan</p>
        </div>
      </div>
    `}}async function we(e){const t=document.getElementById("viewer-container");if(!t){console.error("Viewer container not found");return}try{const r=await Le(e);await Ee(e),await be("viewer-container",r)}catch(r){console.error("Failed to switch splat:",r),t.innerHTML=`
      <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: white; background: #333; font-family: Arial, sans-serif;">
        <div style="text-align: center;">
          <h2>Failed to load 3D scan</h2>
          <p>Error: ${r.message}</p>
          <p>Try clicking another thumbnail below</p>
        </div>
      </div>
    `}}async function Ee(e){try{const r="/nyc_scansV3/splats/splats.json".replace(/\/+/g,"/"),i=await fetch(r);if(!i.ok)throw new Error(`Failed to fetch splats.json: ${i.status} ${i.statusText}`);const l=await i.json(),n=(Array.isArray(l)?l:l.splats||[]).find(C=>C.id===e),a=document.getElementById("header-title"),f=document.getElementById("header-subtitle");a&&f&&(n?(a.textContent=n.name||n.title||`NYC Scan ${e}`,f.textContent=n.description||n.subtitle||"Interactive 3D Gaussian Splat Viewer"):(a.textContent=`NYC Scan ${e}`,f.textContent="Interactive 3D Gaussian Splat Viewer"))}catch(t){console.error("Error updating header content:",t);const r=document.getElementById("header-title"),i=document.getElementById("header-subtitle");r&&i&&(r.textContent="NYC Scans Gallery",i.textContent="Interactive 3D Gaussian Splat Viewer")}}async function Le(e){try{const r="/nyc_scansV3/splats/splats.json".replace(/\/+/g,"/"),i=await fetch(r);if(!i.ok)throw new Error(`Failed to fetch splats.json: ${i.status} ${i.statusText}`);const l=await i.json(),m=Array.isArray(l)?l:l.splats||[],n=m.find(a=>a.id===e);if(n){let a=n.path||n.file||n.url;return a.includes("dropbox.com")&&a.includes("dl=0")&&(a=a.replace("dl=0","dl=1").replace("dropbox.com","dl.dropboxusercontent.com"),console.log("üîÑ Converted Dropbox URL to direct download:",a)),a}if(m.length>0){const a=m[0];let f=a.path||a.file||a.url;return f.includes("dropbox.com")&&f.includes("dl=0")&&(f=f.replace("dl=0","raw=1").replace("dropbox.com","dl.dropboxusercontent.com")),f}throw new Error(`No splat file found for item ID: ${e}`)}catch(t){return console.error("Error loading splat file path:",t),"src/splats/gs_Mailbox_2.ply"}}async function ke(){document.readyState==="loading"&&await new Promise(i=>{document.addEventListener("DOMContentLoaded",i,{once:!0})}),await new Promise(i=>requestAnimationFrame(i));const e=document.getElementById("gallery-container");if(!e){console.error("Gallery container not found. Make sure renderViewer() is called first.");return}const t=`
        <div class="gallery-strip" id="gallery-strip">
            <div class="loading">Loading thumbnails...</div>
        </div>
    `;e.innerHTML=t;const r=document.getElementById("gallery-strip");if(!r){console.error("Gallery strip element not found after creation");return}try{H.addTask("populate-gallery","Loading gallery"),await Ie(r),H.completeTask("populate-gallery","Gallery loaded")}catch(i){console.error("Error populating gallery:",i),H.completeTask("populate-gallery","Gallery error"),r.innerHTML='<p class="error-message">Error loading gallery items. Please check that splats.json exists and is properly formatted.</p>'}}async function Ie(e){try{const r="/nyc_scansV3/splats/splats.json".replace(/\/+/g,"/"),i=await fetch(r);if(!i.ok)throw new Error(`Failed to fetch splats.json: ${i.status} ${i.statusText}`);const l=await i.json();e.innerHTML="";const m=Array.isArray(l)?l:l.splats||[];if(m.length===0){e.innerHTML='<p class="error-message">No scans available in the gallery.</p>';return}m.forEach((n,a)=>{const f=document.createElement("div");f.className="gallery-item";const C=n.name||n.title||`NYC Scan ${a+1}`,_=n.preview||n.thumbnail||"splats/previews/default_preview.png",D=n.id||`scan${a+1}`;f.innerHTML=`
                <img 
                    src="${_}" 
                    alt="${C}" 
                    loading="lazy" 
                    onerror="this.src='splats/previews/default_preview.png'"
                >
            `,f.addEventListener("click",()=>{we(D),document.querySelectorAll(".gallery-item").forEach(M=>{M.classList.remove("selected")}),f.classList.add("selected")}),f.addEventListener("touchstart",M=>{M.preventDefault()}),f.addEventListener("touchend",M=>{M.preventDefault(),we(D),document.querySelectorAll(".gallery-item").forEach(u=>{u.classList.remove("selected")}),f.classList.add("selected")}),f.addEventListener("touchcancel",()=>{}),e.appendChild(f)})}catch(t){throw console.error("Error loading splats.json:",t),t}}async function Pe(){try{H.addTask("fetch-splats","Loading scan data"),H.setMessage("Fetching scan data...");const t="/nyc_scansV3/splats/splats.json".replace(/\/+/g,"/"),r=await fetch(t);if(!r.ok)return H.completeTask("fetch-splats","Using fallback scan"),"scan1";const i=await r.json(),l=Array.isArray(i)?i:i.splats||[];return H.completeTask("fetch-splats","Scan data loaded"),l.length>0&&l[0].id||"scan1"}catch(e){return console.warn("Could not load splats.json, using default scan:",e),H.completeTask("fetch-splats","Using fallback scan"),"scan1"}}async function Te(){H.startLoading("Loading NYC Scans");const e=window.location.hash;if(e.startsWith("#/viewer")){const t=new URLSearchParams(e.split("?")[1]);H.addTask("render-viewer","Setting up viewer"),await ye(t.get("id")),H.completeTask("render-viewer","Viewer ready")}else{H.addTask("get-first-scan","Finding first scan");const t=await Pe();H.completeTask("get-first-scan","First scan found"),H.addTask("render-viewer","Setting up viewer"),await ye(t),H.completeTask("render-viewer","Viewer ready")}H.finishLoading()}window.addEventListener("hashchange",Te);window.addEventListener("DOMContentLoaded",Te);
